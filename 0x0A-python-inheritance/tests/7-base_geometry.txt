The ``6-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> shape1 = BaseGeometry()

    >>> shape1.area() 
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> shape1.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> shape1.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> shape1.integer_validator("age", 1)

    >>> shape1.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> shape1.integer_validator("age", "4")
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> shape1.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> shape1.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> shape1.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> shape1.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> shape1.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer
